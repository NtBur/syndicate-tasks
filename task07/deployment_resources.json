{
  "lambda-basic-execution": {
    "policy_content": {
      "Statement": [
        {
          "Action": [
            "logs:CreateLogGroup",
            "logs:CreateLogStream",
            "logs:PutLogEvents",
            "dynamodb:GetItem",
            "dynamodb:Query",
            "dynamodb:PutItem",
            "dynamodb:Batch*",
            "dynamodb:DeleteItem",
            "ssm:PutParameter",
            "ssm:GetParameter",
            "kms:Decrypt",
            "events:DescribeRule",
            "events:ListTargetsByRule",
            "events:PutRule",
            "events:EnableRule",
            "events:ListRules",
            "events:DisableRule",
            "lambda:AddPermission",
            "lambda:InvokeFunction",
            "events:PutTargets",
            "s3:PutObject",
            "s3:GetObject",
            "s3:ListBucket"
          ],
          "Effect": "Allow",
          "Resource": "*"
        }
      ],
      "Version": "2012-10-17"
    },
    "resource_type": "iam_policy"
  },
  "uuid_generator-role": {
    "predefined_policies": [],
    "principal_service": "lambda",
    "custom_policies": [
      "lambda-basic-execution"
    ],
    "resource_type": "iam_role",
    "allowed_accounts": [
      "${account_id}"
    ]
  },
  "${target_bucket}": {
    "resource_type": "s3_bucket",
    "acl": "private",
    "cors": [],
    "policy": {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Sid": "PublicReadGetObject",
          "Effect": "Allow",
          "Principal": "*",
          "Action": "s3:GetObject",
          "Resource": "arn:aws:s3:::${bucket_name}/*"
        },
        {
          "Sid": "PublicPutObject",
          "Effect": "Allow",
          "Principal": "*",
          "Action": "s3:PutObject",
          "Resource": "arn:aws:s3:::${bucket_name}/*"
        }
      ]
    },
    "public_access_block": {
      "block_public_acls": true,
      "ignore_public_acls": true,
      "block_public_policy": true,
      "restrict_public_buckets": true
    }
  },
  "uuid_trigger": {
    "resource_type": "cloudwatch_rule",
    "rule_type": "schedule",
    "expression": "rate(1 minute)"
  }
}